{"version":3,"names":[],"sources":["PaymentMethod.ts"],"sourcesContent":["import type { FormDetails } from './components/AuBECSDebitFormComponent';\nimport type {\n  CardBrand,\n  BankAcccountHolderType,\n  BankAcccountType,\n} from './Token';\nimport type { FutureUsage } from './PaymentIntent';\nimport type { Address, BillingDetails } from './Common';\n\nexport interface Result {\n  id: string;\n  liveMode: boolean;\n  customerId: string;\n  billingDetails: BillingDetails;\n  paymentMethodType: Type;\n  AuBecsDebit: AuBecsDebitResult;\n  BacsDebit: BacsDebitResult;\n  Card: CardResult;\n  Fpx: FpxResult;\n  Ideal: IdealResult;\n  SepaDebit: SepaDebitResult;\n  Sofort: SofortResult;\n  Upi: UpiResult;\n  USBankAccount: USBankAccountResult;\n}\n\nexport type CreateParams =\n  | CardParams\n  | IdealParams\n  | OxxoParams\n  | P24Params\n  | AlipayParams\n  | GiropayParams\n  | SepaParams\n  | EpsParams\n  | AuBecsDebitParams\n  | SofortParams\n  | GrabPayParams\n  | FPXParams\n  | AfterpayClearpayParams\n  | KlarnaParams\n  // | WeChatPayParams\n  | BancontactParams\n  | USBankAccountParams\n  | PayPalParams\n  | AffirmParams\n  | CashAppParams;\n\nexport type ConfirmParams = CreateParams;\n\nexport type CreateOptions = {\n  setupFutureUsage?: FutureUsage;\n};\n\nexport type ConfirmOptions = CreateOptions;\n\nexport type ShippingDetails = BillingDetails;\n\nexport type CardParams =\n  | {\n      paymentMethodType: 'Card';\n      paymentMethodData?: {\n        token?: string;\n        billingDetails?: BillingDetails;\n      };\n    }\n  | {\n      paymentMethodType: 'Card';\n      paymentMethodData: {\n        paymentMethodId: string;\n        cvc?: string;\n        billingDetails?: BillingDetails;\n      };\n    };\n\nexport interface IdealParams {\n  paymentMethodType: 'Ideal';\n  paymentMethodData?: {\n    bankName?: string;\n    billingDetails?: BillingDetails;\n  };\n}\n\nexport interface FPXParams {\n  paymentMethodType: 'Fpx';\n  paymentMethodData?: { testOfflineBank?: boolean };\n}\n\nexport interface AlipayParams {\n  paymentMethodType: 'Alipay';\n}\n\nexport interface OxxoParams {\n  paymentMethodType: 'Oxxo';\n  paymentMethodData: {\n    billingDetails: BillingDetails;\n  };\n}\n\nexport interface SofortParams {\n  paymentMethodType: 'Sofort';\n  paymentMethodData: {\n    country: string;\n    billingDetails: BillingDetails;\n  };\n}\nexport interface GrabPayParams {\n  paymentMethodType: 'GrabPay';\n  paymentMethodData?: {\n    billingDetails?: BillingDetails;\n  };\n}\n\nexport interface BancontactParams {\n  paymentMethodType: 'Bancontact';\n  paymentMethodData: {\n    billingDetails: BillingDetails;\n  };\n}\n\nexport interface SepaParams {\n  paymentMethodType: 'SepaDebit';\n  paymentMethodData: {\n    iban: string;\n    billingDetails: BillingDetails;\n  };\n}\n\nexport interface GiropayParams {\n  paymentMethodType: 'Giropay';\n  paymentMethodData: {\n    billingDetails: BillingDetails;\n  };\n}\n\nexport interface AfterpayClearpayParams {\n  paymentMethodType: 'AfterpayClearpay';\n  paymentMethodData: {\n    shippingDetails: ShippingDetails;\n    billingDetails: BillingDetails;\n  };\n}\n\nexport type KlarnaParams = {\n  paymentMethodType: 'Klarna';\n  paymentMethodData: {\n    billingDetails: Pick<Required<BillingDetails>, 'email'> & {\n      address: Pick<Required<Address>, 'country'>;\n    } & BillingDetails;\n    shippingDetails?: ShippingDetails;\n  };\n};\n\nexport interface EpsParams {\n  paymentMethodType: 'Eps';\n  paymentMethodData: {\n    billingDetails: BillingDetails;\n  };\n}\n\nexport interface P24Params {\n  paymentMethodType: 'P24';\n  paymentMethodData: {\n    billingDetails: BillingDetails;\n  };\n}\n\nexport interface WeChatPayParams {\n  paymentMethodType: 'WeChatPay';\n  paymentMethodData: {\n    appId: string;\n    billingDetails?: BillingDetails;\n  };\n}\n\nexport interface AuBecsDebitParams {\n  paymentMethodType: 'AuBecsDebit';\n  paymentMethodData: { formDetails: FormDetails };\n}\n\nexport type AffirmParams = {\n  paymentMethodType: 'Affirm';\n  paymentMethodData?: {\n    /** Affirm requires that shipping is present for the payment to succeed because it significantly helps with loan approval rates. Shipping details can either be provided here or via the Payment Intent- https://stripe.com/docs/api/payment_intents/create#create_payment_intent-shipping. */\n    shippingDetails?: ShippingDetails;\n    billingDetails?: BillingDetails;\n  };\n};\n\n/**\n * If paymentMethodData is null, it is assumed that the bank account details have already been attached\n * via `collectBankAccountForPayment` or `collectBankAccountForSetup`.\n */\nexport type USBankAccountParams = {\n  paymentMethodType: 'USBankAccount';\n  paymentMethodData?: {\n    billingDetails: Pick<Required<BillingDetails>, 'name'> & BillingDetails;\n    accountNumber: string;\n    routingNumber: string;\n    /** Defaults to Individual */\n    accountHolderType?: BankAcccountHolderType;\n    /** Defaults to Checking */\n    accountType?: BankAcccountType;\n  };\n};\n\nexport type PayPalParams = {\n  paymentMethodType: 'PayPal';\n  paymentMethodData?: {\n    billingDetails?: BillingDetails;\n  };\n};\n\nexport type CashAppParams = {\n  paymentMethodType: 'CashApp';\n  paymentMethodData?: {\n    billingDetails?: BillingDetails;\n  };\n};\n\nexport interface AuBecsDebitResult {\n  fingerprint?: string;\n  last4?: string;\n  bsbNumber?: string;\n}\n\nexport interface BacsDebitResult {\n  sortCode?: string;\n  last4?: string;\n  fingerprint?: string;\n}\n\nexport interface CardResult {\n  brand?: CardBrand;\n  country?: string;\n  expYear?: number;\n  expMonth?: number;\n  fingerprint?: string;\n  funding?: string;\n  last4?: string;\n  preferredNetwork?: string;\n  availableNetworks?: Array<string>;\n  threeDSecureUsage?: ThreeDSecureUsage;\n}\n\nexport interface ThreeDSecureUsage {\n  isSupported?: boolean;\n}\n\nexport interface FpxResult {\n  bank?: string;\n}\n\nexport interface IdealResult {\n  bankIdentifierCode?: string;\n  bank?: string;\n}\n\nexport interface SepaDebitResult {\n  bankCode?: string;\n  country?: string;\n  fingerprint?: string;\n  last4?: string;\n}\n\nexport interface SofortResult {\n  country?: string;\n}\n\nexport interface UpiResult {\n  vpa?: string;\n}\n\nexport type USBankAccountResult = {\n  routingNumber?: string;\n  accountHolderType?: BankAcccountHolderType;\n  accountType?: BankAcccountType;\n  last4?: string;\n  bankName?: string;\n  linkedAccount?: string;\n  fingerprint?: string;\n  preferredNetwork?: string;\n  supportedNetworks?: string[];\n};\n\nexport type Type =\n  | 'AfterpayClearpay'\n  | 'Card'\n  | 'Alipay'\n  | 'GrabPay'\n  | 'Ideal'\n  | 'Fpx'\n  | 'CardPresent'\n  | 'SepaDebit'\n  | 'AuBecsDebit'\n  | 'BacsDebit'\n  | 'Giropay'\n  | 'P24'\n  | 'Eps'\n  | 'Bancontact'\n  | 'Oxxo'\n  | 'Sofort'\n  | 'Upi'\n  | 'USBankAccount'\n  | 'PayPal'\n  | 'Unknown';\n\nexport type CollectBankAccountParams = {\n  paymentMethodType: 'USBankAccount';\n  paymentMethodData: {\n    billingDetails: {\n      name: string;\n      email?: string;\n    };\n  };\n};\n"],"mappings":""}