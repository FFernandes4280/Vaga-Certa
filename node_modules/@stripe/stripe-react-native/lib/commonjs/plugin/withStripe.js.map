{"version":3,"names":["AndroidConfig","Manifest","addMetaDataItemToMainApplication","getMainApplicationOrThrow","removeMetaDataItemFromMainApplication","pkg","require","withStripe","config","props","withStripeIos","withNoopSwiftFile","withStripeAndroid","expoConfig","merchantIdentifier","withEntitlementsPlist","modResults","setApplePayEntitlement","merchantIdentifiers","entitlements","key","merchants","Array","isArray","id","includes","push","length","IOSConfig","XcodeProjectFile","withBuildSourceFile","filePath","contents","join","enableGooglePay","withAndroidManifest","setGooglePayMetaData","enabled","GOOGLE_PAY_META_NAME","mainApplication","createRunOncePlugin","name","version"],"sources":["withStripe.ts"],"sourcesContent":["import {\n  AndroidConfig,\n  ConfigPlugin,\n  createRunOncePlugin,\n  IOSConfig,\n  withAndroidManifest,\n  withEntitlementsPlist,\n} from '@expo/config-plugins';\n\nconst {\n  addMetaDataItemToMainApplication,\n  getMainApplicationOrThrow,\n  removeMetaDataItemFromMainApplication,\n} = AndroidConfig.Manifest;\n\nconst pkg = require('@stripe/stripe-react-native/package.json');\n\ntype StripePluginProps = {\n  /**\n   * The iOS merchant ID used for enabling Apple Pay.\n   * Without this, the error \"Missing merchant identifier\" will be thrown on iOS.\n   */\n  merchantIdentifier: string | string[];\n  enableGooglePay: boolean;\n};\n\nconst withStripe: ConfigPlugin<StripePluginProps> = (config, props) => {\n  config = withStripeIos(config, props);\n  config = withNoopSwiftFile(config);\n  config = withStripeAndroid(config, props);\n  return config;\n};\n\nconst withStripeIos: ConfigPlugin<StripePluginProps> = (\n  expoConfig,\n  { merchantIdentifier }\n) => {\n  return withEntitlementsPlist(expoConfig, (config) => {\n    config.modResults = setApplePayEntitlement(\n      merchantIdentifier,\n      config.modResults\n    );\n    return config;\n  });\n};\n\n/**\n * Adds the following to the entitlements:\n *\n * <key>com.apple.developer.in-app-payments</key>\n * <array>\n *\t <string>[MERCHANT_IDENTIFIER]</string>\n * </array>\n */\nexport function setApplePayEntitlement(\n  merchantIdentifiers: string | string[],\n  entitlements: Record<string, any>\n): Record<string, any> {\n  const key = 'com.apple.developer.in-app-payments';\n\n  const merchants: string[] = entitlements[key] ?? [];\n\n  if (!Array.isArray(merchantIdentifiers)) {\n    merchantIdentifiers = [merchantIdentifiers];\n  }\n\n  for (const id of merchantIdentifiers) {\n    if (id && !merchants.includes(id)) {\n      merchants.push(id);\n    }\n  }\n\n  if (merchants.length) {\n    entitlements[key] = merchants;\n  }\n  return entitlements;\n}\n\n/**\n * Add a blank Swift file to the Xcode project for Swift compatibility.\n */\nexport const withNoopSwiftFile: ConfigPlugin = (config) => {\n  return IOSConfig.XcodeProjectFile.withBuildSourceFile(config, {\n    filePath: 'noop-file.swift',\n    contents: [\n      '//',\n      '// @generated',\n      '// A blank Swift file must be created for native modules with Swift files to work correctly.',\n      '//',\n      '',\n    ].join('\\n'),\n  });\n};\n\nconst withStripeAndroid: ConfigPlugin<StripePluginProps> = (\n  expoConfig,\n  { enableGooglePay = false }\n) => {\n  return withAndroidManifest(expoConfig, (config) => {\n    config.modResults = setGooglePayMetaData(\n      enableGooglePay,\n      config.modResults\n    );\n\n    return config;\n  });\n};\n\n/**\n * Adds the following to AndroidManifest.xml:\n *\n * <application>\n *   ...\n *\t <meta-data\n *     android:name=\"com.google.android.gms.wallet.api.enabled\"\n *     android:value=\"true|false\" />\n * </application>\n */\nexport function setGooglePayMetaData(\n  enabled: boolean,\n  modResults: AndroidConfig.Manifest.AndroidManifest\n): AndroidConfig.Manifest.AndroidManifest {\n  const GOOGLE_PAY_META_NAME = 'com.google.android.gms.wallet.api.enabled';\n  const mainApplication = getMainApplicationOrThrow(modResults);\n  if (enabled) {\n    addMetaDataItemToMainApplication(\n      mainApplication,\n      GOOGLE_PAY_META_NAME,\n      'true'\n    );\n  } else {\n    removeMetaDataItemFromMainApplication(\n      mainApplication,\n      GOOGLE_PAY_META_NAME\n    );\n  }\n\n  return modResults;\n}\n\nexport default createRunOncePlugin(withStripe, pkg.name, pkg.version);\n"],"mappings":"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"}