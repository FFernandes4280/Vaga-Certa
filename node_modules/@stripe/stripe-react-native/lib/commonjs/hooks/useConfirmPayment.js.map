{"version":3,"names":["useConfirmPayment","useState","loading","setLoading","useStripe","confirmPayment","_confirmPayment","useCallback","paymentIntentClientSecret","data","options","result"],"sources":["useConfirmPayment.tsx"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport type { PaymentIntent } from '../types';\nimport { useStripe } from './useStripe';\n\n/**\n * useConfirmPayment hook\n */\nexport function useConfirmPayment() {\n  const [loading, setLoading] = useState(false);\n  const { confirmPayment } = useStripe();\n\n  const _confirmPayment = useCallback(\n    async (\n      paymentIntentClientSecret: string,\n      data?: PaymentIntent.ConfirmParams,\n      options: PaymentIntent.ConfirmOptions = {}\n    ) => {\n      setLoading(true);\n\n      const result = await confirmPayment(\n        paymentIntentClientSecret,\n        data,\n        options\n      );\n\n      setLoading(false);\n\n      return result;\n    },\n    [confirmPayment]\n  );\n\n  return {\n    confirmPayment: _confirmPayment,\n    loading,\n  };\n}\n"],"mappings":"sXAAA,4BAEA,uCAKO,QAASA,kBAAiB,EAAG,CAClC,cAA8B,GAAAC,eAAQ,EAAC,KAAK,CAAC,qDAAtCC,OAAO,eAAEC,UAAU,eAC1B,eAA2B,GAAAC,qBAAS,GAAE,CAA9BC,cAAc,YAAdA,cAAc,CAEtB,GAAMC,gBAAe,CAAG,GAAAC,kBAAW,qDACjC,UACEC,yBAAiC,CACjCC,IAAkC,CAE/B,IADHC,QAAqC,2DAAG,CAAC,CAAC,CAE1CP,UAAU,CAAC,IAAI,CAAC,CAEhB,GAAMQ,OAAM,MAASN,eAAc,CACjCG,yBAAyB,CACzBC,IAAI,CACJC,OAAO,CACR,CAEDP,UAAU,CAAC,KAAK,CAAC,CAEjB,MAAOQ,OAAM,CACf,CAAC,kEACD,CAACN,cAAc,CAAC,CACjB,CAED,MAAO,CACLA,cAAc,CAAEC,eAAe,CAC/BJ,OAAO,CAAPA,OACF,CAAC,CACH"}