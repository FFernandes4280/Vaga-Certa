{"version":3,"names":["usePaymentSheet","useStripe","initPaymentSheetNative","initPaymentSheet","presentPaymentSheetNative","presentPaymentSheet","confirmPaymentSheetPaymentNative","confirmPaymentSheetPayment","resetPaymentSheetCustomerNative","resetPaymentSheetCustomer","useState","loading","setLoading","useCallback","params","result","options"],"sources":["usePaymentSheet.tsx"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { useStripe } from './useStripe';\n\nimport type { PaymentSheet } from '../types';\n\n/**\n * usePaymentSheet hook\n */\nexport function usePaymentSheet() {\n  const {\n    initPaymentSheet: initPaymentSheetNative,\n    presentPaymentSheet: presentPaymentSheetNative,\n    confirmPaymentSheetPayment: confirmPaymentSheetPaymentNative,\n    resetPaymentSheetCustomer: resetPaymentSheetCustomerNative,\n  } = useStripe();\n  const [loading, setLoading] = useState(false);\n\n  const initPaymentSheet = useCallback(\n    async (params: PaymentSheet.SetupParams) => {\n      setLoading(true);\n      const result = await initPaymentSheetNative(params);\n      setLoading(false);\n      return result;\n    },\n    [initPaymentSheetNative]\n  );\n\n  const presentPaymentSheet = useCallback(\n    async (options?: PaymentSheet.PresentOptions) => {\n      setLoading(true);\n      const result = await presentPaymentSheetNative(options);\n      setLoading(false);\n      return result;\n    },\n    [presentPaymentSheetNative]\n  );\n\n  const confirmPaymentSheetPayment = useCallback(async () => {\n    setLoading(true);\n    const result = await confirmPaymentSheetPaymentNative();\n    setLoading(false);\n    return result;\n  }, [confirmPaymentSheetPaymentNative]);\n\n  const resetPaymentSheetCustomer = useCallback(async () => {\n    setLoading(true);\n    const result = await resetPaymentSheetCustomerNative();\n    setLoading(false);\n    return result;\n  }, [resetPaymentSheetCustomerNative]);\n\n  return {\n    loading,\n    initPaymentSheet,\n    presentPaymentSheet,\n    confirmPaymentSheetPayment,\n    /**\n     * You must call this method when the user logs out from your app. This will ensure that\n     * any persisted authentication state in the PaymentSheet, such as authentication cookies,\n     * is also cleared during logout.\n     */\n    resetPaymentSheetCustomer,\n  };\n}\n"],"mappings":"kXAAA,4BACA,uCAOO,QAASA,gBAAe,EAAG,CAChC,eAKI,GAAAC,qBAAS,GAAE,CAJKC,sBAAsB,YAAxCC,gBAAgB,CACKC,yBAAyB,YAA9CC,mBAAmB,CACSC,gCAAgC,YAA5DC,0BAA0B,CACCC,+BAA+B,YAA1DC,yBAAyB,CAE3B,cAA8B,GAAAC,eAAQ,EAAC,KAAK,CAAC,qDAAtCC,OAAO,eAAEC,UAAU,eAE1B,GAAMT,iBAAgB,CAAG,GAAAU,kBAAW,qDAClC,UAAOC,MAAgC,CAAK,CAC1CF,UAAU,CAAC,IAAI,CAAC,CAChB,GAAMG,OAAM,MAASb,uBAAsB,CAACY,MAAM,CAAC,CACnDF,UAAU,CAAC,KAAK,CAAC,CACjB,MAAOG,OAAM,CACf,CAAC,8DACD,CAACb,sBAAsB,CAAC,CACzB,CAED,GAAMG,oBAAmB,CAAG,GAAAQ,kBAAW,sDACrC,UAAOG,OAAqC,CAAK,CAC/CJ,UAAU,CAAC,IAAI,CAAC,CAChB,GAAMG,OAAM,MAASX,0BAAyB,CAACY,OAAO,CAAC,CACvDJ,UAAU,CAAC,KAAK,CAAC,CACjB,MAAOG,OAAM,CACf,CAAC,gEACD,CAACX,yBAAyB,CAAC,CAC5B,CAED,GAAMG,2BAA0B,CAAG,GAAAM,kBAAW,iCAAC,WAAY,CACzDD,UAAU,CAAC,IAAI,CAAC,CAChB,GAAMG,OAAM,MAAST,iCAAgC,EAAE,CACvDM,UAAU,CAAC,KAAK,CAAC,CACjB,MAAOG,OAAM,CACf,CAAC,EAAE,CAACT,gCAAgC,CAAC,CAAC,CAEtC,GAAMG,0BAAyB,CAAG,GAAAI,kBAAW,iCAAC,WAAY,CACxDD,UAAU,CAAC,IAAI,CAAC,CAChB,GAAMG,OAAM,MAASP,gCAA+B,EAAE,CACtDI,UAAU,CAAC,KAAK,CAAC,CACjB,MAAOG,OAAM,CACf,CAAC,EAAE,CAACP,+BAA+B,CAAC,CAAC,CAErC,MAAO,CACLG,OAAO,CAAPA,OAAO,CACPR,gBAAgB,CAAhBA,gBAAgB,CAChBE,mBAAmB,CAAnBA,mBAAmB,CACnBE,0BAA0B,CAA1BA,0BAA0B,CAM1BE,yBAAyB,CAAzBA,yBACF,CAAC,CACH"}