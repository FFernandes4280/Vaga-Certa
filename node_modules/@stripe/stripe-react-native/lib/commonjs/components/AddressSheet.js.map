{"version":3,"names":["AddressSheetNative","requireNativeComponent","AddressSheet","onSubmit","onError","props","value","nativeEvent","error"],"sources":["AddressSheet.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  AccessibilityProps,\n  requireNativeComponent,\n  NativeSyntheticEvent,\n} from 'react-native';\nimport type {\n  PaymentSheet,\n  AddressDetails,\n  StripeError,\n  AddressSheetError,\n} from '../types';\n\nconst AddressSheetNative = requireNativeComponent<any>('AddressSheetView');\n\n/**\n *  Props\n */\nexport interface Props extends AccessibilityProps {\n  /** Whether the sheet is visible. Defaults to false. */\n  visible: boolean;\n  /** Controls how the modal is presented (after animation). iOS only. Defaults to `popover`. See https://developer.apple.com/documentation/uikit/uimodalpresentationstyle for more info. */\n  presentationStyle?:\n    | 'fullscreen'\n    | 'popover'\n    | 'pageSheet'\n    | 'formSheet'\n    | 'automatic'\n    | 'overFullScreen';\n  /** Controls how the modal animates. iOS only. */\n  animationStyle?: 'flip' | 'curl' | 'slide' | 'dissolve';\n  /** Configuration for the look and feel of the UI. */\n  appearance?: PaymentSheet.AppearanceParams;\n  /** The values to prepopulate the sheet's fields with. */\n  defaultValues?: AddressDetails;\n  /** Configuration for additional fields besides the physical address */\n  additionalFields?: {\n    /** Determines whether the phone number is hidden, required, or optional. Defaults to hidden. */\n    phoneNumber?: 'hidden' | 'optional' | 'required';\n    /** The label of a checkbox displayed below other fields. If null or undefined, the checkbox is not displayed. */\n    checkboxLabel?: string;\n  };\n  /** A list of two-letter country codes representing countries the customers can select. If the list is empty (the default), we display all countries. */\n  allowedCountries?: Array<string>;\n  /** A list of two-letter country codes representing countries that support address autocomplete. Defaults to a list of countries that Stripe has audited to ensure a good autocomplete experience. */\n  autocompleteCountries?: Array<string>;\n  /** The title of the primary button displayed at the bottom of the screen. Defaults to \"Save Address\". */\n  primaryButtonTitle?: string;\n  /** Title displayed at the top of the sheet. Defaults to \"Address\". */\n  sheetTitle?: string;\n  /** Android only. Google Places api key used to provide autocomplete suggestions. When null, autocomplete is disabled on Android. */\n  googlePlacesApiKey?: string;\n  /** Called when the user submits their information */\n  onSubmit: (result: CollectAddressResult) => void;\n  /** Called when the user taps the button to close the sheet before submitting their information, or when an error occurs. */\n  onError: (error: StripeError<AddressSheetError>) => void;\n}\n\nexport type CollectAddressResult = Required<AddressDetails>;\n\n/**\n *\n *\n * @example\n * ```ts\n *  <AddressSheet\n *\n *  />\n * ```\n * @param __namedParameters Props\n * @returns JSX.Element\n * @category ReactComponents\n */\nexport function AddressSheet({ onSubmit, onError, ...props }: Props) {\n  return (\n    <AddressSheetNative\n      {...props}\n      onSubmitAction={(value: NativeSyntheticEvent<CollectAddressResult>) =>\n        onSubmit(value.nativeEvent)\n      }\n      onErrorAction={(\n        value: NativeSyntheticEvent<{\n          error: StripeError<AddressSheetError>;\n        }>\n      ) => onError(value.nativeEvent.error)}\n    />\n  );\n}\n"],"mappings":"8WAAA,oDACA,yCAIsB,wIAQtB,GAAMA,mBAAkB,CAAG,GAAAC,mCAAsB,EAAM,kBAAkB,CAAC,CA4DnE,QAASC,aAAY,MAAyC,IAAtCC,SAAQ,MAARA,QAAQ,CAAEC,OAAO,MAAPA,OAAO,CAAKC,KAAK,uDACxD,MACE,8BAAC,kBAAkB,0BACbA,KAAK,EACT,cAAc,CAAE,wBAACC,KAAiD,QAChEH,SAAQ,CAACG,KAAK,CAACC,WAAW,CAAC,EAC5B,CACD,aAAa,CAAE,uBACbD,KAEE,QACCF,QAAO,CAACE,KAAK,CAACC,WAAW,CAACC,KAAK,CAAC,EAAC,6EACtC,CAEN"}