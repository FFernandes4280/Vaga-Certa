{"version":3,"names":["Status"],"sources":["SetupIntent.ts"],"sourcesContent":["import type { Type } from './PaymentMethod';\nimport type {\n  LastPaymentError,\n  ConfirmParams as PaymentIntentConfirmParams,\n  ConfirmOptions as PaymentIntentConfirmOptions,\n} from './PaymentIntent';\nimport type { NextAction } from './NextAction';\nimport type * as PaymentMethod from './PaymentMethod';\nexport interface Result {\n  id: string;\n  clientSecret: string;\n  lastSetupError: LastPaymentError | null;\n  /** The UNIX timestamp (in milliseconds) of the date this Setup Intent was created. */\n  created: string | null;\n  livemode: boolean;\n  /** @deprecated Use paymentMethod.id instead. */\n  paymentMethodId: string | null;\n  paymentMethod: PaymentMethod.Result | null;\n  status: Status;\n  paymentMethodTypes: Type[];\n  usage: FutureUsage;\n  description: string | null;\n  nextAction: NextAction | null;\n}\n\nexport type ConfirmParams = PaymentIntentConfirmParams;\n\nexport type ConfirmOptions = PaymentIntentConfirmOptions;\n\nexport type FutureUsage =\n  | 'Unknown'\n  | 'None'\n  | 'OnSession'\n  | 'OffSession'\n  | 'OneTime';\n\nexport enum Status {\n  Succeeded = 'Succeeded',\n  RequiresPaymentMethod = 'RequiresPaymentMethod',\n  RequiresConfirmation = 'RequiresConfirmation',\n  Canceled = 'Canceled',\n  Processing = 'Processing',\n  RequiresAction = 'RequiresAction',\n  Unknown = 'Unknown',\n}\n"],"mappings":"kFAoCYA,OAAM,iCAANA,MAAM,EAANA,MAAM,0BAANA,MAAM,kDAANA,MAAM,gDAANA,MAAM,wBAANA,MAAM,4BAANA,MAAM,oCAANA,MAAM,yBAANA,MAAM,kBAANA,MAAM"}