{"version":3,"names":["useStripe","_createPaymentMethod","useCallback","data","options","createPaymentMethod","_createToken","params","createToken","_retrievePaymentIntent","clientSecret","retrievePaymentIntent","_retrieveSetupIntent","retrieveSetupIntent","_confirmPayment","paymentIntentClientSecret","confirmPayment","_handleNextAction","returnURL","handleNextAction","_handleNextActionForSetup","setupIntentClientSecret","handleNextActionForSetup","_confirmSetupIntent","confirmSetupIntent","_createTokenForCVCUpdate","cvc","createTokenForCVCUpdate","_initPaymentSheet","initPaymentSheet","_presentPaymentSheet","presentPaymentSheet","_confirmPaymentSheetPayment","confirmPaymentSheetPayment","_handleURLCallback","url","handleURLCallback","_collectBankAccountForPayment","collectBankAccountForPayment","_collectBankAccountForSetup","collectBankAccountForSetup","_verifyMicrodepositsForPayment","verifyMicrodepositsForPayment","_verifyMicrodepositsForSetup","verifyMicrodepositsForSetup","_canAddCardToWallet","canAddCardToWallet","_collectBankAccountToken","collectBankAccountToken","_collectFinancialConnectionsAccounts","collectFinancialConnectionsAccounts","_resetPaymentSheetCustomer","resetPaymentSheetCustomer","_isPlatformPaySupported","isPlatformPaySupported","_confirmPlatformPaySetupIntent","confirmPlatformPaySetupIntent","_confirmPlatformPayPayment","confirmPlatformPayPayment","_dismissPlatformPay","dismissPlatformPay","_createPlatformPayPaymentMethod","createPlatformPayPaymentMethod","_createPlatformPayToken","createPlatformPayToken","_updatePlatformPaySheet","updatePlatformPaySheet","_openPlatformPaySetup","openPlatformPaySetup"],"sources":["useStripe.tsx"],"sourcesContent":["import type {\n  PaymentMethod,\n  PaymentIntent,\n  PaymentSheet,\n  CreatePaymentMethodResult,\n  RetrievePaymentIntentResult,\n  RetrieveSetupIntentResult,\n  ConfirmPaymentResult,\n  HandleNextActionResult,\n  HandleNextActionForSetupResult,\n  ConfirmSetupIntentResult,\n  CreateTokenForCVCUpdateResult,\n  StripeError,\n  InitPaymentSheetResult,\n  PresentPaymentSheetResult,\n  ConfirmPaymentSheetPaymentResult,\n  SetupIntent,\n  CreateTokenResult,\n  Token,\n  VerifyMicrodepositsParams,\n  VerifyMicrodepositsForPaymentResult,\n  VerifyMicrodepositsForSetupResult,\n  CollectBankAccountForSetupResult,\n  CollectBankAccountForPaymentResult,\n  CanAddCardToWalletParams,\n  CanAddCardToWalletResult,\n  FinancialConnections,\n  PlatformPay,\n  PlatformPayError,\n} from '../types';\nimport { useCallback } from 'react';\nimport {\n  confirmPayment,\n  createPaymentMethod,\n  retrievePaymentIntent,\n  retrieveSetupIntent,\n  confirmSetupIntent,\n  createTokenForCVCUpdate,\n  handleNextAction,\n  handleNextActionForSetup,\n  handleURLCallback,\n  initPaymentSheet,\n  presentPaymentSheet,\n  confirmPaymentSheetPayment,\n  createToken,\n  collectBankAccountForPayment,\n  collectBankAccountForSetup,\n  verifyMicrodepositsForPayment,\n  verifyMicrodepositsForSetup,\n  canAddCardToWallet,\n  collectBankAccountToken,\n  collectFinancialConnectionsAccounts,\n  resetPaymentSheetCustomer,\n  isPlatformPaySupported,\n  confirmPlatformPaySetupIntent,\n  confirmPlatformPayPayment,\n  dismissPlatformPay,\n  createPlatformPayPaymentMethod,\n  createPlatformPayToken,\n  updatePlatformPaySheet,\n  openPlatformPaySetup,\n} from '../functions';\n\n/**\n * useStripe hook\n */\nexport function useStripe() {\n  const _createPaymentMethod = useCallback(\n    async (\n      data: PaymentMethod.CreateParams,\n      options: PaymentMethod.CreateOptions = {}\n    ): Promise<CreatePaymentMethodResult> => {\n      return createPaymentMethod(data, options);\n    },\n    []\n  );\n\n  const _createToken = useCallback(\n    async (params: Token.CreateParams): Promise<CreateTokenResult> => {\n      return createToken(params);\n    },\n    []\n  );\n\n  const _retrievePaymentIntent = useCallback(\n    async (clientSecret: string): Promise<RetrievePaymentIntentResult> => {\n      return retrievePaymentIntent(clientSecret);\n    },\n    []\n  );\n\n  const _retrieveSetupIntent = useCallback(\n    async (clientSecret: string): Promise<RetrieveSetupIntentResult> => {\n      return retrieveSetupIntent(clientSecret);\n    },\n    []\n  );\n\n  const _confirmPayment = useCallback(\n    async (\n      paymentIntentClientSecret: string,\n      data?: PaymentIntent.ConfirmParams,\n      options: PaymentIntent.ConfirmOptions = {}\n    ): Promise<ConfirmPaymentResult> => {\n      return confirmPayment(paymentIntentClientSecret, data, options);\n    },\n    []\n  );\n\n  const _handleNextAction = useCallback(\n    async (\n      paymentIntentClientSecret: string,\n      returnURL?: string\n    ): Promise<HandleNextActionResult> => {\n      return handleNextAction(paymentIntentClientSecret, returnURL);\n    },\n    []\n  );\n\n  const _handleNextActionForSetup = useCallback(\n    async (\n      setupIntentClientSecret: string,\n      returnURL?: string\n    ): Promise<HandleNextActionForSetupResult> => {\n      return handleNextActionForSetup(setupIntentClientSecret, returnURL);\n    },\n    []\n  );\n\n  const _confirmSetupIntent = useCallback(\n    async (\n      paymentIntentClientSecret: string,\n      data: SetupIntent.ConfirmParams,\n      options: SetupIntent.ConfirmOptions = {}\n    ): Promise<ConfirmSetupIntentResult> => {\n      return confirmSetupIntent(paymentIntentClientSecret, data, options);\n    },\n    []\n  );\n\n  const _createTokenForCVCUpdate = useCallback(\n    async (cvc: string): Promise<CreateTokenForCVCUpdateResult> => {\n      return createTokenForCVCUpdate(cvc);\n    },\n    []\n  );\n\n  const _initPaymentSheet = useCallback(\n    async (\n      params: PaymentSheet.SetupParams\n    ): Promise<InitPaymentSheetResult> => {\n      return initPaymentSheet(params);\n    },\n    []\n  );\n\n  const _presentPaymentSheet = useCallback(\n    async (\n      options?: PaymentSheet.PresentOptions\n    ): Promise<PresentPaymentSheetResult> => {\n      return presentPaymentSheet(options);\n    },\n    []\n  );\n\n  const _confirmPaymentSheetPayment =\n    useCallback(async (): Promise<ConfirmPaymentSheetPaymentResult> => {\n      return confirmPaymentSheetPayment();\n    }, []);\n\n  const _handleURLCallback = useCallback(\n    async (url: string): Promise<boolean> => {\n      return handleURLCallback(url);\n    },\n    []\n  );\n\n  const _collectBankAccountForPayment = useCallback(\n    async (\n      clientSecret: string,\n      params: PaymentMethod.CollectBankAccountParams\n    ): Promise<CollectBankAccountForPaymentResult> => {\n      return collectBankAccountForPayment(clientSecret, params);\n    },\n    []\n  );\n\n  const _collectBankAccountForSetup = useCallback(\n    async (\n      clientSecret: string,\n      params: PaymentMethod.CollectBankAccountParams\n    ): Promise<CollectBankAccountForSetupResult> => {\n      return collectBankAccountForSetup(clientSecret, params);\n    },\n    []\n  );\n\n  const _verifyMicrodepositsForPayment = useCallback(\n    async (\n      clientSecret: string,\n      params: VerifyMicrodepositsParams\n    ): Promise<VerifyMicrodepositsForPaymentResult> => {\n      return verifyMicrodepositsForPayment(clientSecret, params);\n    },\n    []\n  );\n\n  const _verifyMicrodepositsForSetup = useCallback(\n    async (\n      clientSecret: string,\n      params: VerifyMicrodepositsParams\n    ): Promise<VerifyMicrodepositsForSetupResult> => {\n      return verifyMicrodepositsForSetup(clientSecret, params);\n    },\n    []\n  );\n\n  const _canAddCardToWallet = useCallback(\n    async (\n      params: CanAddCardToWalletParams\n    ): Promise<CanAddCardToWalletResult> => {\n      return canAddCardToWallet(params);\n    },\n    []\n  );\n\n  const _collectBankAccountToken = useCallback(\n    async (clientSecret: string): Promise<FinancialConnections.TokenResult> => {\n      return collectBankAccountToken(clientSecret);\n    },\n    []\n  );\n\n  const _collectFinancialConnectionsAccounts = useCallback(\n    async (\n      clientSecret: string\n    ): Promise<FinancialConnections.SessionResult> => {\n      return collectFinancialConnectionsAccounts(clientSecret);\n    },\n    []\n  );\n\n  const _resetPaymentSheetCustomer = useCallback(async (): Promise<null> => {\n    return resetPaymentSheetCustomer();\n  }, []);\n\n  const _isPlatformPaySupported = useCallback(\n    async (params?: {\n      googlePay?: PlatformPay.IsGooglePaySupportedParams;\n    }): Promise<boolean> => {\n      return isPlatformPaySupported(params);\n    },\n    []\n  );\n\n  const _confirmPlatformPaySetupIntent = useCallback(\n    async (\n      clientSecret: string,\n      params: PlatformPay.ConfirmParams\n    ): Promise<PlatformPay.ConfirmSetupIntentResult> => {\n      return confirmPlatformPaySetupIntent(clientSecret, params);\n    },\n    []\n  );\n\n  const _confirmPlatformPayPayment = useCallback(\n    async (\n      clientSecret: string,\n      params: PlatformPay.ConfirmParams\n    ): Promise<PlatformPay.ConfirmPaymentResult> => {\n      return confirmPlatformPayPayment(clientSecret, params);\n    },\n    []\n  );\n\n  const _dismissPlatformPay = useCallback(async (): Promise<boolean> => {\n    return dismissPlatformPay();\n  }, []);\n\n  const _createPlatformPayPaymentMethod = useCallback(\n    async (\n      params: PlatformPay.PaymentMethodParams\n    ): Promise<PlatformPay.PaymentMethodResult> => {\n      return createPlatformPayPaymentMethod(params);\n    },\n    []\n  );\n\n  const _createPlatformPayToken = useCallback(\n    async (\n      params: PlatformPay.PaymentMethodParams\n    ): Promise<PlatformPay.TokenResult> => {\n      return createPlatformPayToken(params);\n    },\n    []\n  );\n\n  const _updatePlatformPaySheet = useCallback(\n    async (params: {\n      applePay: {\n        cartItems: Array<PlatformPay.CartSummaryItem>;\n        shippingMethods: Array<PlatformPay.ShippingMethod>;\n        errors: Array<PlatformPay.ApplePaySheetError>;\n      };\n    }): Promise<{\n      error?: StripeError<PlatformPayError>;\n    }> => {\n      return updatePlatformPaySheet(params);\n    },\n    []\n  );\n\n  const _openPlatformPaySetup = useCallback(async (): Promise<void> => {\n    return openPlatformPaySetup();\n  }, []);\n\n  return {\n    retrievePaymentIntent: _retrievePaymentIntent,\n    retrieveSetupIntent: _retrieveSetupIntent,\n    confirmPayment: _confirmPayment,\n    createPaymentMethod: _createPaymentMethod,\n    handleNextAction: _handleNextAction,\n    handleNextActionForSetup: _handleNextActionForSetup,\n    confirmSetupIntent: _confirmSetupIntent,\n    createTokenForCVCUpdate: _createTokenForCVCUpdate,\n    handleURLCallback: _handleURLCallback,\n    confirmPaymentSheetPayment: _confirmPaymentSheetPayment,\n    presentPaymentSheet: _presentPaymentSheet,\n    initPaymentSheet: _initPaymentSheet,\n    createToken: _createToken,\n    collectBankAccountForPayment: _collectBankAccountForPayment,\n    collectBankAccountForSetup: _collectBankAccountForSetup,\n    verifyMicrodepositsForPayment: _verifyMicrodepositsForPayment,\n    verifyMicrodepositsForSetup: _verifyMicrodepositsForSetup,\n    canAddCardToWallet: _canAddCardToWallet,\n    collectBankAccountToken: _collectBankAccountToken,\n    collectFinancialConnectionsAccounts: _collectFinancialConnectionsAccounts,\n    /**\n     * You must call this method when the user logs out from your app. This will ensure that\n     * any persisted authentication state in the PaymentSheet, such as authentication cookies,\n     * is also cleared during logout.\n     */\n    resetPaymentSheetCustomer: _resetPaymentSheetCustomer,\n    isPlatformPaySupported: _isPlatformPaySupported,\n    confirmPlatformPaySetupIntent: _confirmPlatformPaySetupIntent,\n    confirmPlatformPayPayment: _confirmPlatformPayPayment,\n    dismissPlatformPay: _dismissPlatformPay,\n    createPlatformPayPaymentMethod: _createPlatformPayPaymentMethod,\n    createPlatformPayToken: _createPlatformPayToken,\n    updatePlatformPaySheet: _updatePlatformPaySheet,\n    openPlatformPaySetup: _openPlatformPaySetup,\n  };\n}\n"],"mappings":"0QA8BA,4BACA,uCAmCO,QAASA,UAAS,EAAG,CAC1B,GAAMC,qBAAoB,CAAG,GAAAC,kBAAW,qDACtC,UACEC,IAAgC,CAEO,IADvCC,QAAoC,2DAAG,CAAC,CAAC,CAEzC,MAAO,GAAAC,8BAAmB,EAACF,IAAI,CAAEC,OAAO,CAAC,CAC3C,CAAC,8DACD,EAAE,CACH,CAED,GAAME,aAAY,CAAG,GAAAJ,kBAAW,sDAC9B,UAAOK,MAA0B,CAAiC,CAChE,MAAO,GAAAC,sBAAW,EAACD,MAAM,CAAC,CAC5B,CAAC,gEACD,EAAE,CACH,CAED,GAAME,uBAAsB,CAAG,GAAAP,kBAAW,sDACxC,UAAOQ,YAAoB,CAA2C,CACpE,MAAO,GAAAC,gCAAqB,EAACD,YAAY,CAAC,CAC5C,CAAC,gEACD,EAAE,CACH,CAED,GAAME,qBAAoB,CAAG,GAAAV,kBAAW,sDACtC,UAAOQ,YAAoB,CAAyC,CAClE,MAAO,GAAAG,8BAAmB,EAACH,YAAY,CAAC,CAC1C,CAAC,gEACD,EAAE,CACH,CAED,GAAMI,gBAAe,CAAG,GAAAZ,kBAAW,sDACjC,UACEa,yBAAiC,CACjCZ,IAAkC,CAEA,IADlCC,QAAqC,2DAAG,CAAC,CAAC,CAE1C,MAAO,GAAAY,yBAAc,EAACD,yBAAyB,CAAEZ,IAAI,CAAEC,OAAO,CAAC,CACjE,CAAC,oEACD,EAAE,CACH,CAED,GAAMa,kBAAiB,CAAG,GAAAf,kBAAW,sDACnC,UACEa,yBAAiC,CACjCG,SAAkB,CACkB,CACpC,MAAO,GAAAC,2BAAgB,EAACJ,yBAAyB,CAAEG,SAAS,CAAC,CAC/D,CAAC,oEACD,EAAE,CACH,CAED,GAAME,0BAAyB,CAAG,GAAAlB,kBAAW,sDAC3C,UACEmB,uBAA+B,CAC/BH,SAAkB,CAC0B,CAC5C,MAAO,GAAAI,mCAAwB,EAACD,uBAAuB,CAAEH,SAAS,CAAC,CACrE,CAAC,qEACD,EAAE,CACH,CAED,GAAMK,oBAAmB,CAAG,GAAArB,kBAAW,sDACrC,UACEa,yBAAiC,CACjCZ,IAA+B,CAEO,IADtCC,QAAmC,2DAAG,CAAC,CAAC,CAExC,MAAO,GAAAoB,6BAAkB,EAACT,yBAAyB,CAAEZ,IAAI,CAAEC,OAAO,CAAC,CACrE,CAAC,sEACD,EAAE,CACH,CAED,GAAMqB,yBAAwB,CAAG,GAAAvB,kBAAW,sDAC1C,UAAOwB,GAAW,CAA6C,CAC7D,MAAO,GAAAC,kCAAuB,EAACD,GAAG,CAAC,CACrC,CAAC,iEACD,EAAE,CACH,CAED,GAAME,kBAAiB,CAAG,GAAA1B,kBAAW,uDACnC,UACEK,MAAgC,CACI,CACpC,MAAO,GAAAsB,2BAAgB,EAACtB,MAAM,CAAC,CACjC,CAAC,kEACD,EAAE,CACH,CAED,GAAMuB,qBAAoB,CAAG,GAAA5B,kBAAW,uDACtC,UACEE,OAAqC,CACE,CACvC,MAAO,GAAA2B,8BAAmB,EAAC3B,OAAO,CAAC,CACrC,CAAC,kEACD,EAAE,CACH,CAED,GAAM4B,4BAA2B,CAC/B,GAAA9B,kBAAW,iCAAC,WAAuD,CACjE,MAAO,GAAA+B,qCAA0B,GAAE,CACrC,CAAC,EAAE,EAAE,CAAC,CAER,GAAMC,mBAAkB,CAAG,GAAAhC,kBAAW,uDACpC,UAAOiC,GAAW,CAAuB,CACvC,MAAO,GAAAC,4BAAiB,EAACD,GAAG,CAAC,CAC/B,CAAC,kEACD,EAAE,CACH,CAED,GAAME,8BAA6B,CAAG,GAAAnC,kBAAW,uDAC/C,UACEQ,YAAoB,CACpBH,MAA8C,CACE,CAChD,MAAO,GAAA+B,uCAA4B,EAAC5B,YAAY,CAAEH,MAAM,CAAC,CAC3D,CAAC,uEACD,EAAE,CACH,CAED,GAAMgC,4BAA2B,CAAG,GAAArC,kBAAW,uDAC7C,UACEQ,YAAoB,CACpBH,MAA8C,CACA,CAC9C,MAAO,GAAAiC,qCAA0B,EAAC9B,YAAY,CAAEH,MAAM,CAAC,CACzD,CAAC,uEACD,EAAE,CACH,CAED,GAAMkC,+BAA8B,CAAG,GAAAvC,kBAAW,uDAChD,UACEQ,YAAoB,CACpBH,MAAiC,CACgB,CACjD,MAAO,GAAAmC,wCAA6B,EAAChC,YAAY,CAAEH,MAAM,CAAC,CAC5D,CAAC,uEACD,EAAE,CACH,CAED,GAAMoC,6BAA4B,CAAG,GAAAzC,kBAAW,uDAC9C,UACEQ,YAAoB,CACpBH,MAAiC,CACc,CAC/C,MAAO,GAAAqC,sCAA2B,EAAClC,YAAY,CAAEH,MAAM,CAAC,CAC1D,CAAC,uEACD,EAAE,CACH,CAED,GAAMsC,oBAAmB,CAAG,GAAA3C,kBAAW,uDACrC,UACEK,MAAgC,CACM,CACtC,MAAO,GAAAuC,6BAAkB,EAACvC,MAAM,CAAC,CACnC,CAAC,kEACD,EAAE,CACH,CAED,GAAMwC,yBAAwB,CAAG,GAAA7C,kBAAW,uDAC1C,UAAOQ,YAAoB,CAAgD,CACzE,MAAO,GAAAsC,kCAAuB,EAACtC,YAAY,CAAC,CAC9C,CAAC,kEACD,EAAE,CACH,CAED,GAAMuC,qCAAoC,CAAG,GAAA/C,kBAAW,uDACtD,UACEQ,YAAoB,CAC4B,CAChD,MAAO,GAAAwC,8CAAmC,EAACxC,YAAY,CAAC,CAC1D,CAAC,kEACD,EAAE,CACH,CAED,GAAMyC,2BAA0B,CAAG,GAAAjD,kBAAW,iCAAC,WAA2B,CACxE,MAAO,GAAAkD,oCAAyB,GAAE,CACpC,CAAC,EAAE,EAAE,CAAC,CAEN,GAAMC,wBAAuB,CAAG,GAAAnD,kBAAW,uDACzC,UAAOK,MAEN,CAAuB,CACtB,MAAO,GAAA+C,iCAAsB,EAAC/C,MAAM,CAAC,CACvC,CAAC,kEACD,EAAE,CACH,CAED,GAAMgD,+BAA8B,CAAG,GAAArD,kBAAW,uDAChD,UACEQ,YAAoB,CACpBH,MAAiC,CACiB,CAClD,MAAO,GAAAiD,wCAA6B,EAAC9C,YAAY,CAAEH,MAAM,CAAC,CAC5D,CAAC,uEACD,EAAE,CACH,CAED,GAAMkD,2BAA0B,CAAG,GAAAvD,kBAAW,uDAC5C,UACEQ,YAAoB,CACpBH,MAAiC,CACa,CAC9C,MAAO,GAAAmD,oCAAyB,EAAChD,YAAY,CAAEH,MAAM,CAAC,CACxD,CAAC,uEACD,EAAE,CACH,CAED,GAAMoD,oBAAmB,CAAG,GAAAzD,kBAAW,iCAAC,WAA8B,CACpE,MAAO,GAAA0D,6BAAkB,GAAE,CAC7B,CAAC,EAAE,EAAE,CAAC,CAEN,GAAMC,gCAA+B,CAAG,GAAA3D,kBAAW,uDACjD,UACEK,MAAuC,CACM,CAC7C,MAAO,GAAAuD,yCAA8B,EAACvD,MAAM,CAAC,CAC/C,CAAC,kEACD,EAAE,CACH,CAED,GAAMwD,wBAAuB,CAAG,GAAA7D,kBAAW,uDACzC,UACEK,MAAuC,CACF,CACrC,MAAO,GAAAyD,iCAAsB,EAACzD,MAAM,CAAC,CACvC,CAAC,kEACD,EAAE,CACH,CAED,GAAM0D,wBAAuB,CAAG,GAAA/D,kBAAW,uDACzC,UAAOK,MAMN,CAEK,CACJ,MAAO,GAAA2D,iCAAsB,EAAC3D,MAAM,CAAC,CACvC,CAAC,kEACD,EAAE,CACH,CAED,GAAM4D,sBAAqB,CAAG,GAAAjE,kBAAW,iCAAC,WAA2B,CACnE,MAAO,GAAAkE,+BAAoB,GAAE,CAC/B,CAAC,EAAE,EAAE,CAAC,CAEN,MAAO,CACLzD,qBAAqB,CAAEF,sBAAsB,CAC7CI,mBAAmB,CAAED,oBAAoB,CACzCI,cAAc,CAAEF,eAAe,CAC/BT,mBAAmB,CAAEJ,oBAAoB,CACzCkB,gBAAgB,CAAEF,iBAAiB,CACnCK,wBAAwB,CAAEF,yBAAyB,CACnDI,kBAAkB,CAAED,mBAAmB,CACvCI,uBAAuB,CAAEF,wBAAwB,CACjDW,iBAAiB,CAAEF,kBAAkB,CACrCD,0BAA0B,CAAED,2BAA2B,CACvDD,mBAAmB,CAAED,oBAAoB,CACzCD,gBAAgB,CAAED,iBAAiB,CACnCpB,WAAW,CAAEF,YAAY,CACzBgC,4BAA4B,CAAED,6BAA6B,CAC3DG,0BAA0B,CAAED,2BAA2B,CACvDG,6BAA6B,CAAED,8BAA8B,CAC7DG,2BAA2B,CAAED,4BAA4B,CACzDG,kBAAkB,CAAED,mBAAmB,CACvCG,uBAAuB,CAAED,wBAAwB,CACjDG,mCAAmC,CAAED,oCAAoC,CAMzEG,yBAAyB,CAAED,0BAA0B,CACrDG,sBAAsB,CAAED,uBAAuB,CAC/CG,6BAA6B,CAAED,8BAA8B,CAC7DG,yBAAyB,CAAED,0BAA0B,CACrDG,kBAAkB,CAAED,mBAAmB,CACvCG,8BAA8B,CAAED,+BAA+B,CAC/DG,sBAAsB,CAAED,uBAAuB,CAC/CG,sBAAsB,CAAED,uBAAuB,CAC/CG,oBAAoB,CAAED,qBACxB,CAAC,CACH"}